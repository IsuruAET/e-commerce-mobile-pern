{
  "info": {
    "_postman_id": "e-commerce-api",
    "name": "E-Commerce API",
    "description": "API collection for E-Commerce mobile application with comprehensive testing and documentation",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Authentication",
      "description": "Authentication endpoints for user registration, login, and token management",
      "item": [
        {
          "name": "Register",
          "description": "Register a new user account",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"password123\",\n    \"name\": \"Test User\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/register",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// Test response time",
                  "pm.test('Response time is less than 500ms', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});",
                  "",
                  "// Parse the response body",
                  "var jsonData = pm.response.json();",
                  "",
                  "// Set environment variables",
                  "pm.environment.set('access_token', jsonData.accessToken);",
                  "pm.environment.set('user_id', jsonData.user.id);",
                  "",
                  "// Extract CSRF token from response headers or cookies",
                  "const csrfToken = pm.response.headers.get('X-CSRF-Token') || pm.cookies.get('csrf_token');",
                  "if (csrfToken) {",
                  "    pm.environment.set('csrf_token', csrfToken);",
                  "}",
                  "",
                  "// Test response structure",
                  "pm.test('Response has required fields', function () {",
                  "    pm.expect(jsonData).to.have.property('accessToken');",
                  "    pm.expect(jsonData).to.have.property('user');",
                  "    pm.expect(jsonData.user).to.have.property('id');",
                  "    pm.expect(jsonData.user).to.have.property('email');",
                  "    pm.expect(jsonData.user).to.have.property('name');",
                  "});",
                  "",
                  "// Test response status",
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "// Test data types",
                  "pm.test('Data types are correct', function () {",
                  "    pm.expect(typeof jsonData.accessToken).to.equal('string');",
                  "    pm.expect(typeof jsonData.user.id).to.equal('string');",
                  "    pm.expect(typeof jsonData.user.email).to.equal('string');",
                  "    pm.expect(typeof jsonData.user.name).to.equal('string');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Login",
          "description": "Login with existing credentials",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"{{test_email}}\",\n    \"password\": \"{{test_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// Test response time",
                  "pm.test('Response time is less than 500ms', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);",
                  "});",
                  "",
                  "// Parse the response body",
                  "var jsonData = pm.response.json();",
                  "",
                  "// Set environment variables",
                  "pm.environment.set('access_token', jsonData.accessToken);",
                  "pm.environment.set('user_id', jsonData.user.id);",
                  "",
                  "// Extract CSRF token from response headers or cookies",
                  "const csrfToken = pm.response.headers.get('X-CSRF-Token') || pm.cookies.get('csrf_token');",
                  "if (csrfToken) {",
                  "    pm.environment.set('csrf_token', csrfToken);",
                  "}",
                  "",
                  "// Test response structure",
                  "pm.test('Response has required fields', function () {",
                  "    pm.expect(jsonData).to.have.property('accessToken');",
                  "    pm.expect(jsonData).to.have.property('user');",
                  "    pm.expect(jsonData.user).to.have.property('id');",
                  "    pm.expect(jsonData.user).to.have.property('email');",
                  "});",
                  "",
                  "// Test response status",
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "// Test data types",
                  "pm.test('Data types are correct', function () {",
                  "    pm.expect(typeof jsonData.accessToken).to.equal('string');",
                  "    pm.expect(typeof jsonData.user.id).to.equal('string');",
                  "    pm.expect(typeof jsonData.user.email).to.equal('string');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Change Password",
          "description": "Change user password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrf_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"currentPassword\": \"password123\",\n    \"newPassword\": \"newpassword123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/change-password",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "change-password"]
            }
          }
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/auth/refresh-token",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "refresh-token"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// Parse the response body",
                  "var jsonData = pm.response.json();",
                  "",
                  "// Set environment variables",
                  "pm.environment.set('access_token', jsonData.accessToken);",
                  "",
                  "// Test if tokens are present",
                  "pm.test('Access token is present', function () {",
                  "    pm.expect(jsonData.accessToken).to.exist;",
                  "});",
                  "",
                  "// Test response status",
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrf_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "logout"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// Test response status",
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "// Clear access token and user ID after successful logout",
                  "pm.environment.unset('access_token');",
                  "pm.environment.unset('user_id');",
                  "pm.environment.unset('csrf_token');",
                  "",
                  "// Verify tokens are cleared",
                  "pm.test('Access token is cleared', function () {",
                  "    pm.expect(pm.environment.get('access_token')).to.be.undefined;",
                  "});",
                  "pm.test('CSRF token is cleared', function () {",
                  "    pm.expect(pm.environment.get('csrf_token')).to.be.undefined;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Google OAuth",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/v1/auth/google",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "google"]
            }
          }
        },
        {
          "name": "Google OAuth Callback",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/api/v1/auth/google/callback",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "google", "callback"]
            }
          }
        },
        {
          "name": "Forgot Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"{{test_email}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/forgot-password",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "forgot-password"]
            }
          }
        },
        {
          "name": "Reset Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"token\": \"{{reset_token}}\",\n    \"password\": \"new-password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/reset-password",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "reset-password"]
            }
          }
        },
        {
          "name": "Deactivate Account",
          "description": "Deactivate user account",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrf_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/auth/deactivate",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "deactivate"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// Test response status",
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Categories",
      "item": [
        {
          "name": "Add Category",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrf_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Hair Services\",\n    \"description\": \"Professional hair cutting, styling, and treatment services\",\n    \"image\": \"https://example.com/hair-services.jpg\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/categories",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "categories"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// Parse the response body",
                  "var jsonData = pm.response.json();",
                  "",
                  "// Set category_id environment variable",
                  "pm.environment.set('category_id', jsonData.id);",
                  "",
                  "// Test response status",
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Category by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrf_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/categories/{{category_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "categories", "{{category_id}}"]
            }
          }
        },
        {
          "name": "List Categories",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrf_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/categories",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "categories"]
            }
          }
        },
        {
          "name": "Update Category",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrf_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated Hair Services\",\n    \"description\": \"Updated description for hair services\",\n    \"image\": \"https://example.com/updated-hair-services.jpg\",\n    \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/categories/{{category_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "categories", "{{category_id}}"]
            }
          }
        },
        {
          "name": "Delete Category",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrf_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/categories/{{category_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "categories", "{{category_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Services",
      "item": [
        {
          "name": "Add Service",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrf_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Hair Cut\",\n    \"description\": \"Professional hair cutting service with styling\",\n    \"price\": 25.99,\n    \"duration\": 30,\n    \"categoryId\": \"{{category_id}}\",\n    \"images\": [\n        \"https://example.com/haircut1.jpg\"\n    ]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/services",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "services"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// Parse the response body",
                  "var jsonData = pm.response.json();",
                  "",
                  "// Set service_id environment variable",
                  "pm.environment.set('service_id', jsonData.id);",
                  "",
                  "// Test response status",
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Service by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrf_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/services/{{service_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "services", "{{service_id}}"]
            }
          }
        },
        {
          "name": "List Active Services",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrf_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/services/active?count=10&page=1&categoryId={{category_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "services", "active"],
              "query": [
                {
                  "key": "count",
                  "value": "10",
                  "description": "Number of items per page"
                },
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number"
                },
                {
                  "key": "categoryId",
                  "value": "{{category_id}}",
                  "description": "Filter by category ID"
                }
              ]
            }
          }
        },
        {
          "name": "List All Services",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrf_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/services?count=10&page=1&categoryId={{category_id}}&isActive=true&sortBy=name&sortOrder=asc",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "services"],
              "query": [
                {
                  "key": "count",
                  "value": "10",
                  "description": "Number of items per page"
                },
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number"
                },
                {
                  "key": "categoryId",
                  "value": "{{category_id}}",
                  "description": "Filter by category ID"
                },
                {
                  "key": "isActive",
                  "value": "true",
                  "description": "Filter by active status"
                },
                {
                  "key": "sortBy",
                  "value": "name",
                  "description": "Sort field"
                },
                {
                  "key": "sortOrder",
                  "value": "asc",
                  "description": "Sort order"
                }
              ]
            }
          }
        },
        {
          "name": "Update Service",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrf_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated Hair Cut\",\n    \"description\": \"Updated description for hair cutting service\",\n    \"price\": 29.99,\n    \"duration\": 45,\n    \"categoryId\": \"{{category_id}}\",\n    \"isActive\": true,\n    \"images\": [\n        \"https://example.com/updated-haircut.jpg\"\n    ]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/services/{{service_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "services", "{{service_id}}"]
            }
          }
        },
        {
          "name": "Delete Service",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrf_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/services/{{service_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "services", "{{service_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "Create User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrf_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"password\": \"password123\",\n    \"role\": \"user\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/users",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "users"]
            }
          }
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrf_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "users", "{{user_id}}"]
            }
          }
        },
        {
          "name": "List Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrf_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/users?count=10&page=1",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "users"],
              "query": [
                {
                  "key": "count",
                  "value": "10",
                  "description": "Number of items per page"
                },
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number"
                }
              ]
            }
          }
        },
        {
          "name": "Update User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrf_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated Name\",\n    \"email\": \"updated.email@example.com\",\n    \"role\": \"admin\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "users", "{{user_id}}"]
            }
          }
        },
        {
          "name": "Delete User",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrf_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "users", "{{user_id}}"]
            }
          }
        },
        {
          "name": "Deactivate User",
          "description": "Deactivate a user account (ADMIN only)",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrf_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/users/{{user_id}}/deactivate",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "users", "{{user_id}}", "deactivate"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// Test response status",
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Reactivate User",
          "description": "Reactivate a deactivated user account (ADMIN only)",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrf_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/users/{{user_id}}/reactivate",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "users", "{{user_id}}", "reactivate"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// Test response status",
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Appointments",
      "item": [
        {
          "name": "Create Appointment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrf_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"stylistId\": \"{{stylist_id}}\",\n    \"date\": \"2024-03-20T10:00:00Z\",\n    \"notes\": \"Please provide a haircut with styling\",\n    \"services\": [\n        {\n            \"serviceId\": \"{{service_id}}\",\n            \"numberOfPeople\": 2\n        }\n    ]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/appointments",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "appointments"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// Parse the response body",
                  "var jsonData = pm.response.json();",
                  "",
                  "// Set appointment_id environment variable",
                  "pm.environment.set('appointment_id', jsonData.id);",
                  "",
                  "// Test response status",
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Appointment by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrf_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/appointments/{{appointment_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "appointments", "{{appointment_id}}"]
            }
          }
        },
        {
          "name": "Update Appointment",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrf_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"stylistId\": \"{{stylist_id}}\",\n    \"date\": \"2024-03-20T11:00:00Z\",\n    \"notes\": \"Updated appointment notes\",\n    \"status\": \"confirmed\",\n    \"services\": [\n        {\n            \"serviceId\": \"{{service_id}}\",\n            \"numberOfPeople\": 2\n        }\n    ]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/appointments/{{appointment_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "appointments", "{{appointment_id}}"]
            }
          }
        },
        {
          "name": "Get User Appointments",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrf_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/appointments/user/appointments",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "appointments", "user", "appointments"]
            }
          }
        },
        {
          "name": "Get Stylist Appointments",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrf_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/appointments/stylist/appointments",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "appointments", "stylist", "appointments"]
            }
          }
        },
        {
          "name": "Get Total Income",
          "description": "Get total income from all appointments (ADMIN only)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrf_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/appointments/stats/income",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "appointments", "stats", "income"],
              "query": [
                {
                  "key": "stylistId",
                  "value": "{{stylist_id}}",
                  "description": "Filter by stylist ID (optional)",
                  "disabled": true
                },
                {
                  "key": "startDate",
                  "value": "{{start_date}}",
                  "description": "Start date for filtering (optional)",
                  "disabled": true
                },
                {
                  "key": "endDate",
                  "value": "{{end_date}}",
                  "description": "End date for filtering (optional)",
                  "disabled": true
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// Test response status",
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "// Parse the response body",
                  "var jsonData = pm.response.json();",
                  "",
                  "// Test response structure",
                  "pm.test('Response has totalIncome field', function () {",
                  "    pm.expect(jsonData).to.have.property('totalIncome');",
                  "});",
                  "",
                  "// Test data type",
                  "pm.test('totalIncome is a number', function () {",
                  "    pm.expect(typeof jsonData.totalIncome).to.equal('number');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Total Services",
          "description": "Get total number of services booked (ADMIN only)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrf_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/appointments/stats/services",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "appointments", "stats", "services"],
              "query": [
                {
                  "key": "stylistId",
                  "value": "{{stylist_id}}",
                  "description": "Filter by stylist ID (optional)",
                  "disabled": true
                },
                {
                  "key": "startDate",
                  "value": "{{start_date}}",
                  "description": "Start date for filtering (optional)",
                  "disabled": true
                },
                {
                  "key": "endDate",
                  "value": "{{end_date}}",
                  "description": "End date for filtering (optional)",
                  "disabled": true
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "// Test response status",
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "// Parse the response body",
                  "var jsonData = pm.response.json();",
                  "",
                  "// Test response structure",
                  "pm.test('Response has totalServices field', function () {",
                  "    pm.expect(jsonData).to.have.property('totalServices');",
                  "});",
                  "",
                  "// Test data type",
                  "pm.test('totalServices is a number', function () {",
                  "    pm.expect(typeof jsonData.totalServices).to.equal('number');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:5000",
      "type": "string",
      "description": "Base URL for the API"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string",
      "description": "JWT access token for authenticated requests"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string",
      "description": "ID of the authenticated user"
    },
    {
      "key": "test_email",
      "value": "admin@example.com",
      "type": "string",
      "description": "Test email for authentication"
    },
    {
      "key": "test_password",
      "value": "password123",
      "type": "string",
      "description": "Test password for authentication"
    },
    {
      "key": "reset_token",
      "value": "your-reset-token",
      "type": "string"
    },
    {
      "key": "category_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "service_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "appointment_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "stylist_id",
      "value": "your-stylist-id",
      "type": "string"
    },
    {
      "key": "csrf_token",
      "value": "",
      "type": "string",
      "description": "CSRF token for form submissions"
    }
  ]
}
